{
	"id": "7abfad82b8eb20b876a4d20273bd9d8e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/alyra/Admin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract Admin is Ownable {\r\n    \r\n    mapping(address => bool) private whitelist;\r\n    mapping(address => bool) private blacklist;\r\n    \r\n    event Whitelisted(address _address);\r\n    event Blacklisted(address _address);\r\n\r\n    function accept(address _addr) public onlyOwner {\r\n        require(!whitelist[_addr], \"This address is already whitelisted !\");\r\n        require(!blacklist[_addr], \"This address is already blacklisted !\");\r\n        whitelist[_addr] = true;\r\n        blacklist[_addr] = false;\r\n        emit Whitelisted(_addr);\r\n    }\r\n\r\n    function ban(address _addr) public onlyOwner {\r\n        require(!blacklist[_addr], \"This address is already blacklisted !\");\r\n        require(!whitelist[_addr], \"This address is already whitelisted !\");\r\n        whitelist[_addr] = false;\r\n        blacklist[_addr] = true;\r\n        emit Blacklisted(_addr);\r\n    }\r\n\r\n    function isWhitelisted(address _addr) public view onlyOwner returns(bool) {\r\n        return whitelist[_addr];\r\n    }\r\n\r\n    function isBlacklisted(address _addr) public view onlyOwner returns(bool) {\r\n        return blacklist[_addr];\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/alyra/Admin.sol": {
				"Admin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "Whitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "accept",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "ban",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/alyra/Admin.sol\":169:1284  contract Admin is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/alyra/Admin.sol\":169:1284  contract Admin is Ownable {... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/alyra/Admin.sol\":169:1284  contract Admin is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/alyra/Admin.sol\":169:1284  contract Admin is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97c3ccd8\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x97c3ccd8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9f005920\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3af32abf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/alyra/Admin.sol\":1041:1157  function isWhitelisted(address _addr) public view onlyOwner returns(bool) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/alyra/Admin.sol\":721:1033  function ban(address _addr) public onlyOwner {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/alyra/Admin.sol\":398:713  function accept(address _addr) public onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/alyra/Admin.sol\":1165:1281  function isBlacklisted(address _addr) public view onlyOwner returns(bool) {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/alyra/Admin.sol\":1041:1157  function isWhitelisted(address _addr) public view onlyOwner returns(bool) {... */\n    tag_14:\n        /* \"contracts/alyra/Admin.sol\":1109:1113  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_37\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_37:\n        /* \"contracts/alyra/Admin.sol\":1133:1142  whitelist */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":1133:1149  whitelist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":1143:1148  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":1133:1149  whitelist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":1126:1149  return whitelist[_addr] */\n      swap1\n      pop\n        /* \"contracts/alyra/Admin.sol\":1041:1157  function isWhitelisted(address _addr) public view onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/alyra/Admin.sol\":721:1033  function ban(address _addr) public onlyOwner {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_47:\n        /* \"contracts/alyra/Admin.sol\":786:795  blacklist */\n      0x02\n        /* \"contracts/alyra/Admin.sol\":786:802  blacklist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":796:801  _addr */\n      dup3\n        /* \"contracts/alyra/Admin.sol\":786:802  blacklist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":785:802  !blacklist[_addr] */\n      iszero\n        /* \"contracts/alyra/Admin.sol\":777:844  require(!blacklist[_addr], \"This address is already blacklisted !\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/alyra/Admin.sol\":864:873  whitelist */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":864:880  whitelist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":874:879  _addr */\n      dup3\n        /* \"contracts/alyra/Admin.sol\":864:880  whitelist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":863:880  !whitelist[_addr] */\n      iszero\n        /* \"contracts/alyra/Admin.sol\":855:922  require(!whitelist[_addr], \"This address is already whitelisted !\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/alyra/Admin.sol\":952:957  false */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":933:942  whitelist */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":933:949  whitelist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":943:948  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":933:949  whitelist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/alyra/Admin.sol\":933:957  whitelist[_addr] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/alyra/Admin.sol\":987:991  true */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":968:977  blacklist */\n      0x02\n        /* \"contracts/alyra/Admin.sol\":968:984  blacklist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":978:983  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":968:984  blacklist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/alyra/Admin.sol\":968:991  blacklist[_addr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/alyra/Admin.sol\":1007:1025  Blacklisted(_addr) */\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n        /* \"contracts/alyra/Admin.sol\":1019:1024  _addr */\n      dup2\n        /* \"contracts/alyra/Admin.sol\":1007:1025  Blacklisted(_addr) */\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/alyra/Admin.sol\":721:1033  function ban(address _addr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/alyra/Admin.sol\":398:713  function accept(address _addr) public onlyOwner {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/alyra/Admin.sol\":466:475  whitelist */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":466:482  whitelist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":476:481  _addr */\n      dup3\n        /* \"contracts/alyra/Admin.sol\":466:482  whitelist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":465:482  !whitelist[_addr] */\n      iszero\n        /* \"contracts/alyra/Admin.sol\":457:524  require(!whitelist[_addr], \"This address is already whitelisted !\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_54\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/alyra/Admin.sol\":544:553  blacklist */\n      0x02\n        /* \"contracts/alyra/Admin.sol\":544:560  blacklist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":554:559  _addr */\n      dup3\n        /* \"contracts/alyra/Admin.sol\":544:560  blacklist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":543:560  !blacklist[_addr] */\n      iszero\n        /* \"contracts/alyra/Admin.sol\":535:602  require(!blacklist[_addr], \"This address is already blacklisted !\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/alyra/Admin.sol\":632:636  true */\n      0x01\n        /* \"contracts/alyra/Admin.sol\":613:622  whitelist */\n      dup1\n        /* \"contracts/alyra/Admin.sol\":613:629  whitelist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":623:628  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":613:629  whitelist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/alyra/Admin.sol\":613:636  whitelist[_addr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/alyra/Admin.sol\":666:671  false */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":647:656  blacklist */\n      0x02\n        /* \"contracts/alyra/Admin.sol\":647:663  blacklist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":657:662  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":647:663  blacklist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/alyra/Admin.sol\":647:671  blacklist[_addr] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/alyra/Admin.sol\":687:705  Whitelisted(_addr) */\n      0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54\n        /* \"contracts/alyra/Admin.sol\":699:704  _addr */\n      dup2\n        /* \"contracts/alyra/Admin.sol\":687:705  Whitelisted(_addr) */\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/alyra/Admin.sol\":398:713  function accept(address _addr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/alyra/Admin.sol\":1165:1281  function isBlacklisted(address _addr) public view onlyOwner returns(bool) {... */\n    tag_34:\n        /* \"contracts/alyra/Admin.sol\":1233:1237  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/alyra/Admin.sol\":1257:1266  blacklist */\n      0x02\n        /* \"contracts/alyra/Admin.sol\":1257:1273  blacklist[_addr] */\n      0x00\n        /* \"contracts/alyra/Admin.sol\":1267:1272  _addr */\n      dup4\n        /* \"contracts/alyra/Admin.sol\":1257:1273  blacklist[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/alyra/Admin.sol\":1250:1273  return blacklist[_addr] */\n      swap1\n      pop\n        /* \"contracts/alyra/Admin.sol\":1165:1281  function isBlacklisted(address _addr) public view onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_84:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_86:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_87:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_108\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_88:\n        /* \"#utility.yul\":641:665   */\n      tag_110\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_87\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_111:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_89:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_113\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_116\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":917:1036   */\n    tag_115:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_117\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_89\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_90:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_91:\n        /* \"#utility.yul\":1353:1374   */\n      tag_120\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_90\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_16:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_122\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_91\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_92:\n        /* \"#utility.yul\":1690:1714   */\n      tag_124\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_87\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_22:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_126\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_93:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2354   */\n    tag_94:\n        /* \"#utility.yul\":2270:2304   */\n      0x54686973206164647265737320697320616c726561647920626c61636b6c6973\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2305   */\n      mstore\n        /* \"#utility.yul\":2339:2346   */\n      0x7465642021000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2326:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2337   */\n      add\n        /* \"#utility.yul\":2315:2347   */\n      mstore\n        /* \"#utility.yul\":2130:2354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2726   */\n    tag_95:\n        /* \"#utility.yul\":2502:2505   */\n      0x00\n        /* \"#utility.yul\":2523:2590   */\n      tag_130\n        /* \"#utility.yul\":2587:2589   */\n      0x25\n        /* \"#utility.yul\":2582:2585   */\n      dup4\n        /* \"#utility.yul\":2523:2590   */\n      tag_93\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2516:2590   */\n      swap2\n      pop\n        /* \"#utility.yul\":2599:2692   */\n      tag_131\n        /* \"#utility.yul\":2688:2691   */\n      dup3\n        /* \"#utility.yul\":2599:2692   */\n      tag_94\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2717:2719   */\n      0x40\n        /* \"#utility.yul\":2712:2715   */\n      dup3\n        /* \"#utility.yul\":2708:2720   */\n      add\n        /* \"#utility.yul\":2701:2720   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2732:3151   */\n    tag_51:\n        /* \"#utility.yul\":2898:2902   */\n      0x00\n        /* \"#utility.yul\":2936:2938   */\n      0x20\n        /* \"#utility.yul\":2925:2934   */\n      dup3\n        /* \"#utility.yul\":2921:2939   */\n      add\n        /* \"#utility.yul\":2913:2939   */\n      swap1\n      pop\n        /* \"#utility.yul\":2985:2994   */\n      dup2\n        /* \"#utility.yul\":2979:2983   */\n      dup2\n        /* \"#utility.yul\":2975:2995   */\n      sub\n        /* \"#utility.yul\":2971:2972   */\n      0x00\n        /* \"#utility.yul\":2960:2969   */\n      dup4\n        /* \"#utility.yul\":2956:2973   */\n      add\n        /* \"#utility.yul\":2949:2996   */\n      mstore\n        /* \"#utility.yul\":3013:3144   */\n      tag_133\n        /* \"#utility.yul\":3139:3143   */\n      dup2\n        /* \"#utility.yul\":3013:3144   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3005:3144   */\n      swap1\n      pop\n        /* \"#utility.yul\":2732:3151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3157:3381   */\n    tag_96:\n        /* \"#utility.yul\":3297:3331   */\n      0x54686973206164647265737320697320616c72656164792077686974656c6973\n        /* \"#utility.yul\":3293:3294   */\n      0x00\n        /* \"#utility.yul\":3285:3291   */\n      dup3\n        /* \"#utility.yul\":3281:3295   */\n      add\n        /* \"#utility.yul\":3274:3332   */\n      mstore\n        /* \"#utility.yul\":3366:3373   */\n      0x7465642021000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3353:3359   */\n      dup3\n        /* \"#utility.yul\":3349:3364   */\n      add\n        /* \"#utility.yul\":3342:3374   */\n      mstore\n        /* \"#utility.yul\":3157:3381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3753   */\n    tag_97:\n        /* \"#utility.yul\":3529:3532   */\n      0x00\n        /* \"#utility.yul\":3550:3617   */\n      tag_136\n        /* \"#utility.yul\":3614:3616   */\n      0x25\n        /* \"#utility.yul\":3609:3612   */\n      dup4\n        /* \"#utility.yul\":3550:3617   */\n      tag_93\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3543:3617   */\n      swap2\n      pop\n        /* \"#utility.yul\":3626:3719   */\n      tag_137\n        /* \"#utility.yul\":3715:3718   */\n      dup3\n        /* \"#utility.yul\":3626:3719   */\n      tag_96\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3744:3746   */\n      0x40\n        /* \"#utility.yul\":3739:3742   */\n      dup3\n        /* \"#utility.yul\":3735:3747   */\n      add\n        /* \"#utility.yul\":3728:3747   */\n      swap1\n      pop\n        /* \"#utility.yul\":3387:3753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4178   */\n    tag_54:\n        /* \"#utility.yul\":3925:3929   */\n      0x00\n        /* \"#utility.yul\":3963:3965   */\n      0x20\n        /* \"#utility.yul\":3952:3961   */\n      dup3\n        /* \"#utility.yul\":3948:3966   */\n      add\n        /* \"#utility.yul\":3940:3966   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4021   */\n      dup2\n        /* \"#utility.yul\":4006:4010   */\n      dup2\n        /* \"#utility.yul\":4002:4022   */\n      sub\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3987:3996   */\n      dup4\n        /* \"#utility.yul\":3983:4000   */\n      add\n        /* \"#utility.yul\":3976:4023   */\n      mstore\n        /* \"#utility.yul\":4040:4171   */\n      tag_139\n        /* \"#utility.yul\":4166:4170   */\n      dup2\n        /* \"#utility.yul\":4040:4171   */\n      tag_97\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4032:4171   */\n      swap1\n      pop\n        /* \"#utility.yul\":3759:4178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4184:4409   */\n    tag_98:\n        /* \"#utility.yul\":4324:4358   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4312:4318   */\n      dup3\n        /* \"#utility.yul\":4308:4322   */\n      add\n        /* \"#utility.yul\":4301:4359   */\n      mstore\n        /* \"#utility.yul\":4393:4401   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4380:4386   */\n      dup3\n        /* \"#utility.yul\":4376:4391   */\n      add\n        /* \"#utility.yul\":4369:4402   */\n      mstore\n        /* \"#utility.yul\":4184:4409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4415:4781   */\n    tag_99:\n        /* \"#utility.yul\":4557:4560   */\n      0x00\n        /* \"#utility.yul\":4578:4645   */\n      tag_142\n        /* \"#utility.yul\":4642:4644   */\n      0x26\n        /* \"#utility.yul\":4637:4640   */\n      dup4\n        /* \"#utility.yul\":4578:4645   */\n      tag_93\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4571:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4654:4747   */\n      tag_143\n        /* \"#utility.yul\":4743:4746   */\n      dup3\n        /* \"#utility.yul\":4654:4747   */\n      tag_98\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4772:4774   */\n      0x40\n        /* \"#utility.yul\":4767:4770   */\n      dup3\n        /* \"#utility.yul\":4763:4775   */\n      add\n        /* \"#utility.yul\":4756:4775   */\n      swap1\n      pop\n        /* \"#utility.yul\":4415:4781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4787:5206   */\n    tag_69:\n        /* \"#utility.yul\":4953:4957   */\n      0x00\n        /* \"#utility.yul\":4991:4993   */\n      0x20\n        /* \"#utility.yul\":4980:4989   */\n      dup3\n        /* \"#utility.yul\":4976:4994   */\n      add\n        /* \"#utility.yul\":4968:4994   */\n      swap1\n      pop\n        /* \"#utility.yul\":5040:5049   */\n      dup2\n        /* \"#utility.yul\":5034:5038   */\n      dup2\n        /* \"#utility.yul\":5030:5050   */\n      sub\n        /* \"#utility.yul\":5026:5027   */\n      0x00\n        /* \"#utility.yul\":5015:5024   */\n      dup4\n        /* \"#utility.yul\":5011:5028   */\n      add\n        /* \"#utility.yul\":5004:5051   */\n      mstore\n        /* \"#utility.yul\":5068:5199   */\n      tag_145\n        /* \"#utility.yul\":5194:5198   */\n      dup2\n        /* \"#utility.yul\":5068:5199   */\n      tag_99\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5060:5199   */\n      swap1\n      pop\n        /* \"#utility.yul\":4787:5206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5212:5394   */\n    tag_100:\n        /* \"#utility.yul\":5352:5386   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5348:5349   */\n      0x00\n        /* \"#utility.yul\":5340:5346   */\n      dup3\n        /* \"#utility.yul\":5336:5350   */\n      add\n        /* \"#utility.yul\":5329:5387   */\n      mstore\n        /* \"#utility.yul\":5212:5394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5400:5766   */\n    tag_101:\n        /* \"#utility.yul\":5542:5545   */\n      0x00\n        /* \"#utility.yul\":5563:5630   */\n      tag_148\n        /* \"#utility.yul\":5627:5629   */\n      0x20\n        /* \"#utility.yul\":5622:5625   */\n      dup4\n        /* \"#utility.yul\":5563:5630   */\n      tag_93\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5556:5630   */\n      swap2\n      pop\n        /* \"#utility.yul\":5639:5732   */\n      tag_149\n        /* \"#utility.yul\":5728:5731   */\n      dup3\n        /* \"#utility.yul\":5639:5732   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5757:5759   */\n      0x20\n        /* \"#utility.yul\":5752:5755   */\n      dup3\n        /* \"#utility.yul\":5748:5760   */\n      add\n        /* \"#utility.yul\":5741:5760   */\n      swap1\n      pop\n        /* \"#utility.yul\":5400:5766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5772:6191   */\n    tag_80:\n        /* \"#utility.yul\":5938:5942   */\n      0x00\n        /* \"#utility.yul\":5976:5978   */\n      0x20\n        /* \"#utility.yul\":5965:5974   */\n      dup3\n        /* \"#utility.yul\":5961:5979   */\n      add\n        /* \"#utility.yul\":5953:5979   */\n      swap1\n      pop\n        /* \"#utility.yul\":6025:6034   */\n      dup2\n        /* \"#utility.yul\":6019:6023   */\n      dup2\n        /* \"#utility.yul\":6015:6035   */\n      sub\n        /* \"#utility.yul\":6011:6012   */\n      0x00\n        /* \"#utility.yul\":6000:6009   */\n      dup4\n        /* \"#utility.yul\":5996:6013   */\n      add\n        /* \"#utility.yul\":5989:6036   */\n      mstore\n        /* \"#utility.yul\":6053:6184   */\n      tag_151\n        /* \"#utility.yul\":6179:6183   */\n      dup2\n        /* \"#utility.yul\":6053:6184   */\n      tag_101\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6045:6184   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:6191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e2951ede7185436f4be9560cb9d356b2ed4a03a26f6c1e4387626fe270043f9d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_254": {
									"entryPoint": 49,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_241": {
									"entryPoint": 56,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061002c61002161003160201b60201c565b61003860201b60201c565b6100f9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b4a806101065f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c806397c3ccd81161005957806397c3ccd8146100d75780639f005920146100f3578063f2fde38b1461010f578063fe575a871461012b5761007b565b80633af32abf1461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b6100996004803603810190610094919061086c565b61015b565b6040516100a691906108b1565b60405180910390f35b6100b76101b5565b005b6100c16101c8565b6040516100ce91906108d9565b60405180910390f35b6100f160048036038101906100ec919061086c565b6101ef565b005b61010d6004803603810190610108919061086c565b6103ee565b005b6101296004803603810190610124919061086c565b6105ec565b005b6101456004803603810190610140919061086c565b61066e565b60405161015291906108b1565b60405180910390f35b5f6101646106c8565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6101bd6106c8565b6101c65f610746565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f76106c8565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610972565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030290610a00565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855816040516103e391906108d9565b60405180910390a150565b6103f66106c8565b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790610a00565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190610972565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516105e191906108d9565b60405180910390a150565b6105f46106c8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065990610a8e565b60405180910390fd5b61066b81610746565b50565b5f6106776106c8565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6106d0610807565b73ffffffffffffffffffffffffffffffffffffffff166106ee6101c8565b73ffffffffffffffffffffffffffffffffffffffff1614610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90610af6565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61083b82610812565b9050919050565b61084b81610831565b8114610855575f80fd5b50565b5f8135905061086681610842565b92915050565b5f602082840312156108815761088061080e565b5b5f61088e84828501610858565b91505092915050565b5f8115159050919050565b6108ab81610897565b82525050565b5f6020820190506108c45f8301846108a2565b92915050565b6108d381610831565b82525050565b5f6020820190506108ec5f8301846108ca565b92915050565b5f82825260208201905092915050565b7f54686973206164647265737320697320616c726561647920626c61636b6c69735f8201527f7465642021000000000000000000000000000000000000000000000000000000602082015250565b5f61095c6025836108f2565b915061096782610902565b604082019050919050565b5f6020820190508181035f83015261098981610950565b9050919050565b7f54686973206164647265737320697320616c72656164792077686974656c69735f8201527f7465642021000000000000000000000000000000000000000000000000000000602082015250565b5f6109ea6025836108f2565b91506109f582610990565b604082019050919050565b5f6020820190508181035f830152610a17816109de565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610a786026836108f2565b9150610a8382610a1e565b604082019050919050565b5f6020820190508181035f830152610aa581610a6c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610ae06020836108f2565b9150610aeb82610aac565b602082019050919050565b5f6020820190508181035f830152610b0d81610ad4565b905091905056fea2646970667358221220e2951ede7185436f4be9560cb9d356b2ed4a03a26f6c1e4387626fe270043f9d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x31 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB4A DUP1 PUSH2 0x106 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97C3CCD8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x97C3CCD8 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x9F005920 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x12B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x164 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x1C6 PUSH0 PUSH2 0x746 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0x6C8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x659 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66B DUP2 PUSH2 0x746 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x677 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0x807 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EE PUSH2 0x1C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x83B DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84B DUP2 PUSH2 0x831 JUMP JUMPDEST DUP2 EQ PUSH2 0x855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0x842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x80E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AB DUP2 PUSH2 0x897 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 DUP2 PUSH2 0x831 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH0 DUP4 ADD DUP5 PUSH2 0x8CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686973206164647265737320697320616C726561647920626C61636B6C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642021000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x95C PUSH1 0x25 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x967 DUP3 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x989 DUP2 PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686973206164647265737320697320616C72656164792077686974656C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642021000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA PUSH1 0x25 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F5 DUP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA17 DUP2 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA78 PUSH1 0x26 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA83 DUP3 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAA5 DUP2 PUSH2 0xA6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAE0 PUSH1 0x20 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAEB DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB0D DUP2 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP6 0x1E 0xDE PUSH18 0x85436F4BE9560CB9D356B2ED4A03A26F6C1E NUMBER DUP8 PUSH3 0x6FE270 DIV EXTCODEHASH SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:1115:0:-:0;;;;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;169:1115:0;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2426:187:1:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;169:1115:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_184": {
									"entryPoint": 1736,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_254": {
									"entryPoint": 2055,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_241": {
									"entryPoint": 1862,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accept_60": {
									"entryPoint": 1006,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ban_100": {
									"entryPoint": 495,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlacklisted_128": {
									"entryPoint": 1646,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelisted_114": {
									"entryPoint": 347,
									"id": 114,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_170": {
									"entryPoint": 456,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_198": {
									"entryPoint": 437,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_221": {
									"entryPoint": 1516,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6194:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1656:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1663:3:3",
														"type": ""
													}
												],
												"src": "1603:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1797:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1809:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1820:4:3",
														"type": ""
													}
												],
												"src": "1727:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2028:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2039:11:3",
														"type": ""
													}
												],
												"src": "1955:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:3"
																	},
																	{
																		"hexValue": "54686973206164647265737320697320616c726561647920626c61636b6c6973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2270:34:3",
																		"type": "",
																		"value": "This address is already blacklis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:15:3"
																	},
																	{
																		"hexValue": "7465642021",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2339:7:3",
																		"type": "",
																		"value": "ted !"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2228:6:3",
														"type": ""
													}
												],
												"src": "2130:224:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2516:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2582:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2587:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2523:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2688:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
																	"nodeType": "YulIdentifier",
																	"src": "2599:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2599:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2701:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2712:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2717:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2708:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2701:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2494:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2502:3:3",
														"type": ""
													}
												],
												"src": "2360:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2903:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2913:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2925:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2936:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2913:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2960:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2971:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2956:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2979:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2985:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2949:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3005:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3139:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3013:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3005:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2883:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2898:4:3",
														"type": ""
													}
												],
												"src": "2732:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3285:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3293:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3281:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:14:3"
																	},
																	{
																		"hexValue": "54686973206164647265737320697320616c72656164792077686974656c6973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3297:34:3",
																		"type": "",
																		"value": "This address is already whitelis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3274:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3361:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:15:3"
																	},
																	{
																		"hexValue": "7465642021",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3366:7:3",
																		"type": "",
																		"value": "ted !"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3255:6:3",
														"type": ""
													}
												],
												"src": "3157:224:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3533:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3543:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3609:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3614:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3550:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
																	"nodeType": "YulIdentifier",
																	"src": "3626:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3626:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3626:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3728:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3739:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3744:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3735:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3728:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3529:3:3",
														"type": ""
													}
												],
												"src": "3387:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3930:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3940:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3952:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3948:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3940:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4006:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4032:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4166:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4040:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4032:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3910:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3925:4:3",
														"type": ""
													}
												],
												"src": "3759:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4312:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4320:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4308:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4308:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4324:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4301:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4380:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4388:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4393:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4369:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4282:6:3",
														"type": ""
													}
												],
												"src": "4184:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4561:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4571:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4637:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4578:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4743:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4654:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4654:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4756:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4767:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4772:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4763:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4756:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4549:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4557:3:3",
														"type": ""
													}
												],
												"src": "4415:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4958:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4968:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4980:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4968:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5034:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5060:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5194:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5068:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5060:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4938:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4953:4:3",
														"type": ""
													}
												],
												"src": "4787:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5318:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5340:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5348:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5352:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5329:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5329:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5310:6:3",
														"type": ""
													}
												],
												"src": "5212:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5546:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5556:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5622:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5627:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5563:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5728:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5639:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5639:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5741:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5752:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5757:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5534:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5542:3:3",
														"type": ""
													}
												],
												"src": "5400:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5943:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5953:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5965:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5961:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5953:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6000:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6011:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5996:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5996:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6019:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6025:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6015:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5989:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6045:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6179:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6053:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6045:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5923:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5938:4:3",
														"type": ""
													}
												],
												"src": "5772:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"This address is already blacklis\")\n\n        mstore(add(memPtr, 32), \"ted !\")\n\n    }\n\n    function abi_encode_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"This address is already whitelis\")\n\n        mstore(add(memPtr, 32), \"ted !\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c806397c3ccd81161005957806397c3ccd8146100d75780639f005920146100f3578063f2fde38b1461010f578063fe575a871461012b5761007b565b80633af32abf1461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b6100996004803603810190610094919061086c565b61015b565b6040516100a691906108b1565b60405180910390f35b6100b76101b5565b005b6100c16101c8565b6040516100ce91906108d9565b60405180910390f35b6100f160048036038101906100ec919061086c565b6101ef565b005b61010d6004803603810190610108919061086c565b6103ee565b005b6101296004803603810190610124919061086c565b6105ec565b005b6101456004803603810190610140919061086c565b61066e565b60405161015291906108b1565b60405180910390f35b5f6101646106c8565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6101bd6106c8565b6101c65f610746565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f76106c8565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610972565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030290610a00565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855816040516103e391906108d9565b60405180910390a150565b6103f66106c8565b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790610a00565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190610972565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516105e191906108d9565b60405180910390a150565b6105f46106c8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065990610a8e565b60405180910390fd5b61066b81610746565b50565b5f6106776106c8565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6106d0610807565b73ffffffffffffffffffffffffffffffffffffffff166106ee6101c8565b73ffffffffffffffffffffffffffffffffffffffff1614610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90610af6565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61083b82610812565b9050919050565b61084b81610831565b8114610855575f80fd5b50565b5f8135905061086681610842565b92915050565b5f602082840312156108815761088061080e565b5b5f61088e84828501610858565b91505092915050565b5f8115159050919050565b6108ab81610897565b82525050565b5f6020820190506108c45f8301846108a2565b92915050565b6108d381610831565b82525050565b5f6020820190506108ec5f8301846108ca565b92915050565b5f82825260208201905092915050565b7f54686973206164647265737320697320616c726561647920626c61636b6c69735f8201527f7465642021000000000000000000000000000000000000000000000000000000602082015250565b5f61095c6025836108f2565b915061096782610902565b604082019050919050565b5f6020820190508181035f83015261098981610950565b9050919050565b7f54686973206164647265737320697320616c72656164792077686974656c69735f8201527f7465642021000000000000000000000000000000000000000000000000000000602082015250565b5f6109ea6025836108f2565b91506109f582610990565b604082019050919050565b5f6020820190508181035f830152610a17816109de565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610a786026836108f2565b9150610a8382610a1e565b604082019050919050565b5f6020820190508181035f830152610aa581610a6c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610ae06020836108f2565b9150610aeb82610aac565b602082019050919050565b5f6020820190508181035f830152610b0d81610ad4565b905091905056fea2646970667358221220e2951ede7185436f4be9560cb9d356b2ed4a03a26f6c1e4387626fe270043f9d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97C3CCD8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x97C3CCD8 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x9F005920 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x12B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x164 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x1C6 PUSH0 PUSH2 0x746 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0x6C8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x659 SWAP1 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66B DUP2 PUSH2 0x746 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x677 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0x807 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EE PUSH2 0x1C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x83B DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84B DUP2 PUSH2 0x831 JUMP JUMPDEST DUP2 EQ PUSH2 0x855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0x842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x80E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AB DUP2 PUSH2 0x897 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 DUP2 PUSH2 0x831 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH0 DUP4 ADD DUP5 PUSH2 0x8CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686973206164647265737320697320616C726561647920626C61636B6C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642021000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x95C PUSH1 0x25 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x967 DUP3 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x989 DUP2 PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686973206164647265737320697320616C72656164792077686974656C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642021000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA PUSH1 0x25 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F5 DUP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA17 DUP2 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA78 PUSH1 0x26 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA83 DUP3 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAA5 DUP2 PUSH2 0xA6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAE0 PUSH1 0x20 DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAEB DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB0D DUP2 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP6 0x1E 0xDE PUSH18 0x85436F4BE9560CB9D356B2ED4A03A26F6C1E NUMBER DUP8 PUSH3 0x6FE270 DIV EXTCODEHASH SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:1115:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:1;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:312:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;398:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1165:116:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041;1109:4;1094:13:1;:11;:13::i;:::-;1133:9:0::1;:16;1143:5;1133:16;;;;;;;;;;;;;;;;;;;;;;;;;1126:23;;1041:116:::0;;;:::o;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;721:312:0:-;1094:13:1;:11;:13::i;:::-;786:9:0::1;:16;796:5;786:16;;;;;;;;;;;;;;;;;;;;;;;;;785:17;777:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;864:9;:16;874:5;864:16;;;;;;;;;;;;;;;;;;;;;;;;;863:17;855:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;952:5;933:9;:16;943:5;933:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;987:4;968:9;:16;978:5;968:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1007:18;1019:5;1007:18;;;;;;:::i;:::-;;;;;;;;721:312:::0;:::o;398:315::-;1094:13:1;:11;:13::i;:::-;466:9:0::1;:16;476:5;466:16;;;;;;;;;;;;;;;;;;;;;;;;;465:17;457:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;544:9;:16;554:5;544:16;;;;;;;;;;;;;;;;;;;;;;;;;543:17;535:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;632:4;613:9:::0;:16:::1;623:5;613:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;666:5;647:9;:16;657:5;647:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;687:18;699:5;687:18;;;;;;:::i;:::-;;;;;;;;398:315:::0;:::o;2074:198:1:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1165:116:0:-;1233:4;1094:13:1;:11;:13::i;:::-;1257:9:0::1;:16;1267:5;1257:16;;;;;;;;;;;;;;;;;;;;;;;;;1250:23;;1165:116:::0;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:224::-;2270:34;2266:1;2258:6;2254:14;2247:58;2339:7;2334:2;2326:6;2322:15;2315:32;2130:224;:::o;2360:366::-;2502:3;2523:67;2587:2;2582:3;2523:67;:::i;:::-;2516:74;;2599:93;2688:3;2599:93;:::i;:::-;2717:2;2712:3;2708:12;2701:19;;2360:366;;;:::o;2732:419::-;2898:4;2936:2;2925:9;2921:18;2913:26;;2985:9;2979:4;2975:20;2971:1;2960:9;2956:17;2949:47;3013:131;3139:4;3013:131;:::i;:::-;3005:139;;2732:419;;;:::o;3157:224::-;3297:34;3293:1;3285:6;3281:14;3274:58;3366:7;3361:2;3353:6;3349:15;3342:32;3157:224;:::o;3387:366::-;3529:3;3550:67;3614:2;3609:3;3550:67;:::i;:::-;3543:74;;3626:93;3715:3;3626:93;:::i;:::-;3744:2;3739:3;3735:12;3728:19;;3387:366;;;:::o;3759:419::-;3925:4;3963:2;3952:9;3948:18;3940:26;;4012:9;4006:4;4002:20;3998:1;3987:9;3983:17;3976:47;4040:131;4166:4;4040:131;:::i;:::-;4032:139;;3759:419;;;:::o;4184:225::-;4324:34;4320:1;4312:6;4308:14;4301:58;4393:8;4388:2;4380:6;4376:15;4369:33;4184:225;:::o;4415:366::-;4557:3;4578:67;4642:2;4637:3;4578:67;:::i;:::-;4571:74;;4654:93;4743:3;4654:93;:::i;:::-;4772:2;4767:3;4763:12;4756:19;;4415:366;;;:::o;4787:419::-;4953:4;4991:2;4980:9;4976:18;4968:26;;5040:9;5034:4;5030:20;5026:1;5015:9;5011:17;5004:47;5068:131;5194:4;5068:131;:::i;:::-;5060:139;;4787:419;;;:::o;5212:182::-;5352:34;5348:1;5340:6;5336:14;5329:58;5212:182;:::o;5400:366::-;5542:3;5563:67;5627:2;5622:3;5563:67;:::i;:::-;5556:74;;5639:93;5728:3;5639:93;:::i;:::-;5757:2;5752:3;5748:12;5741:19;;5400:366;;;:::o;5772:419::-;5938:4;5976:2;5965:9;5961:18;5953:26;;6025:9;6019:4;6015:20;6011:1;6000:9;5996:17;5989:47;6053:131;6179:4;6053:131;:::i;:::-;6045:139;;5772:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "578000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accept(address)": "infinite",
								"ban(address)": "infinite",
								"isBlacklisted(address)": "5197",
								"isWhitelisted(address)": "5132",
								"owner()": "2560",
								"renounceOwnership()": "30413",
								"transferOwnership(address)": "30775"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1284,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2951ede7185436f4be9560cb9d356b2ed4a03a26f6c1e4387626fe270043f9d64736f6c63430008140033",
									".code": [
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "97C3CCD8"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "97C3CCD8"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "9F005920"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "FE575A87"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "3AF32ABF"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 1284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1041,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1041,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1041,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 721,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 721,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 398,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 398,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1165,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1165,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1165,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1148,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1133,
											"end": 1149,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 786,
											"end": 802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 802,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 777,
											"end": 844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 777,
											"end": 844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 879,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 864,
											"end": 880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 863,
											"end": 880,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 855,
											"end": 922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 855,
											"end": 922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 952,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 948,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 933,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 957,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 987,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 968,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 983,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 968,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 1019,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1007,
											"end": 1025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1025,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 1033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 398,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 466,
											"end": 475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 457,
											"end": 524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 457,
											"end": 524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 544,
											"end": 560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 543,
											"end": 560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 535,
											"end": 602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 535,
											"end": 602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 613,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 662,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 647,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 647,
											"end": 671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "AAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54"
										},
										{
											"begin": 699,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 687,
											"end": 705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 705,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1257,
											"end": 1273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1273,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2354,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2130,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "54686973206164647265737320697320616C726561647920626C61636B6C6973"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2346,
											"name": "PUSH",
											"source": 3,
											"value": "7465642021000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2726,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2360,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2582,
											"end": 2585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2523,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2590,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2523,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2688,
											"end": 2691,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2599,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2692,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2599,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2708,
											"end": 2720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 3151,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2732,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 2995,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 2972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2969,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 2973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3139,
											"end": 3143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3013,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3144,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3013,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 3151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 3151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 3151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3381,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3157,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3331,
											"name": "PUSH",
											"source": 3,
											"value": "54686973206164647265737320697320616C72656164792077686974656C6973"
										},
										{
											"begin": 3293,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3373,
											"name": "PUSH",
											"source": 3,
											"value": "7465642021000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3753,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3387,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3614,
											"end": 3616,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3609,
											"end": 3612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3550,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3550,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3550,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3550,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3626,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3626,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 4178,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3759,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4012,
											"end": 4021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4000,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4023,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4040,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4171,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4040,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 4178,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 4178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 4178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 4178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4409,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4184,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4358,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4401,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4376,
											"end": 4391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4781,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4415,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4637,
											"end": 4640,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4578,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4645,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4578,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4654,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4747,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4654,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4763,
											"end": 4775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4980,
											"end": 4989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 4994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5004,
											"end": 5051,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5194,
											"end": 5198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5068,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5068,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 5206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 5206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 5206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5212,
											"end": 5394,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5212,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5352,
											"end": 5386,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5348,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5336,
											"end": 5350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5212,
											"end": 5394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5212,
											"end": 5394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5766,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5400,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5542,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5625,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5630,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5563,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5728,
											"end": 5731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5639,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5732,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5639,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 6191,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5772,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 5974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6019,
											"end": 6023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 6053,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6184,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6053,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 6191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 6191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 6191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/alyra/Admin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accept(address)": "9f005920",
							"ban(address)": "97c3ccd8",
							"isBlacklisted(address)": "fe575a87",
							"isWhitelisted(address)": "3af32abf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"ban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/alyra/Admin.sol\":\"Admin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/alyra/Admin.sol\":{\"keccak256\":\"0xb332366994cf107415d25ef4867f313e2955355799c7eccb71af65b493b10c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ccda54dc1e78c07f1d1ea2f42b9cf20459d8266e04b5086d8147c381ad9c40\",\"dweb:/ipfs/QmeUHAGA78Ps49Pvo1Pesb3uPzwEVE895eG6wwwEeiXJjd\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "contracts/alyra/Admin.sol:Admin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 8,
								"contract": "contracts/alyra/Admin.sol:Admin",
								"label": "whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 12,
								"contract": "contracts/alyra/Admin.sol:Admin",
								"label": "blacklist",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/alyra/Admin.sol": {
				"ast": {
					"absolutePath": "contracts/alyra/Admin.sol",
					"exportedSymbols": {
						"Admin": [
							129
						],
						"Context": [
							264
						],
						"Ownable": [
							242
						]
					},
					"id": 130,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 130,
							"sourceUnit": 243,
							"src": "60:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nameLocations": [
											"187:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "187:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:0"
								}
							],
							"canonicalName": "Admin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129,
								242,
								264
							],
							"name": "Admin",
							"nameLocation": "178:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "241:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 129,
									"src": "208:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 7,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "216:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "208:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 6,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "227:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "blacklist",
									"nameLocation": "290:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 129,
									"src": "257:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "265:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "257:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "276:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "aab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
									"id": 16,
									"name": "Whitelisted",
									"nameLocation": "318:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "338:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "330:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:18:0"
									},
									"src": "312:36:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855",
									"id": 20,
									"name": "Blacklisted",
									"nameLocation": "360:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "380:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:18:0"
									},
									"src": "354:36:0"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "446:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "465:17:0",
															"subExpression": {
																"baseExpression": {
																	"id": 28,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "466:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 30,
																"indexExpression": {
																	"id": 29,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "476:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "466:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320697320616c72656164792077686974656c69737465642021",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "484:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
																"typeString": "literal_string \"This address is already whitelisted !\""
															},
															"value": "This address is already whitelisted !"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
																"typeString": "literal_string \"This address is already whitelisted !\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "457:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "543:17:0",
															"subExpression": {
																"baseExpression": {
																	"id": 36,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "544:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 38,
																"indexExpression": {
																	"id": 37,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "554:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "544:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320697320616c726561647920626c61636b6c69737465642021",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "562:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
																"typeString": "literal_string \"This address is already blacklisted !\""
															},
															"value": "This address is already blacklisted !"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
																"typeString": "literal_string \"This address is already blacklisted !\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "535:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "535:67:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 43,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 45,
														"indexExpression": {
															"id": 44,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "623:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "613:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "632:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "613:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "613:23:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "647:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "647:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "666:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "647:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "647:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 56,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "699:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 55,
														"name": "Whitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "687:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "687:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "EmitStatement",
												"src": "682:23:0"
											}
										]
									},
									"functionSelector": "9f005920",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 25,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 24,
												"name": "onlyOwner",
												"nameLocations": [
													"436:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "436:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "436:9:0"
										}
									],
									"name": "accept",
									"nameLocation": "407:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:15:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:0"
									},
									"scope": 129,
									"src": "398:315:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "766:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "785:17:0",
															"subExpression": {
																"baseExpression": {
																	"id": 68,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "786:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 70,
																"indexExpression": {
																	"id": 69,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "786:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320697320616c726561647920626c61636b6c69737465642021",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "804:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
																"typeString": "literal_string \"This address is already blacklisted !\""
															},
															"value": "This address is already blacklisted !"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcd3280e158227bffd032e877cca7e7a504a081bcea0fa0d022d47e9622d01f7",
																"typeString": "literal_string \"This address is already blacklisted !\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "777:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "863:17:0",
															"subExpression": {
																"baseExpression": {
																	"id": 76,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "864:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 78,
																"indexExpression": {
																	"id": 77,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "874:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "864:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320697320616c72656164792077686974656c69737465642021",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
																"typeString": "literal_string \"This address is already whitelisted !\""
															},
															"value": "This address is already whitelisted !"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1ceab27dd6ed07f05dac916dcd1b6bd794a03c45049dce86e59097d8a43cc9",
																"typeString": "literal_string \"This address is already whitelisted !\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "855:67:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 83,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "933:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 85,
														"indexExpression": {
															"id": 84,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "933:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "952:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "933:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "933:24:0"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 89,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 91,
														"indexExpression": {
															"id": 90,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "978:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "968:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "987:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "968:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "968:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 96,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1007:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "EmitStatement",
												"src": "1002:23:0"
											}
										]
									},
									"functionSelector": "97c3ccd8",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "onlyOwner",
												"nameLocations": [
													"756:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "756:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "756:9:0"
										}
									],
									"name": "ban",
									"nameLocation": "730:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "742:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "734:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:15:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:0:0"
									},
									"scope": 129,
									"src": "721:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1115:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 109,
														"name": "whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1133:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 111,
													"indexExpression": {
														"id": 110,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1143:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1133:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 108,
												"id": 112,
												"nodeType": "Return",
												"src": "1126:23:0"
											}
										]
									},
									"functionSelector": "3af32abf",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyOwner",
												"nameLocations": [
													"1091:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "1091:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1091:9:0"
										}
									],
									"name": "isWhitelisted",
									"nameLocation": "1050:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1064:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:15:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1109:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:6:0"
									},
									"scope": 129,
									"src": "1041:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1239:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 123,
														"name": "blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1257:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 125,
													"indexExpression": {
														"id": 124,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1257:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 122,
												"id": 126,
												"nodeType": "Return",
												"src": "1250:23:0"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 119,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 118,
												"name": "onlyOwner",
												"nameLocations": [
													"1215:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "1215:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1215:9:0"
										}
									],
									"name": "isBlacklisted",
									"nameLocation": "1174:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:15:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:0"
									},
									"scope": 129,
									"src": "1165:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 130,
							"src": "169:1115:0",
							"usedErrors": [],
							"usedEvents": [
								16,
								20,
								143
							]
						}
					],
					"src": "33:1251:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							264
						],
						"Ownable": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 265,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 134,
										"name": "Context",
										"nameLocations": [
											"683:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "683:7:1"
									},
									"id": 135,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 133,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242,
								264
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 143,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 148,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 153,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 242,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 156,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 159,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 161,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 167,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 166,
												"id": 168,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 242,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 177,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 242,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1878:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 190,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1888:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:1"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "1868:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:1"
									},
									"scope": 242,
									"src": "1824:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2144:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "2162:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 217,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "2256:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 216,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2237:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 203,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "2134:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2101:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:1"
									},
									"scope": 242,
									"src": "2074:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2489:124:1",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "2499:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"id": 229,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "2518:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:1"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2534:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 232,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2543:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 236,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2587:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2597:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2566:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "EmitStatement",
												"src": "2561:45:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:1"
									},
									"scope": 242,
									"src": "2426:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "654:1961:1",
							"usedErrors": [],
							"usedEvents": [
								143
							]
						}
					],
					"src": "102:2514:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							264
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 245,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 264,
							"linearizedBaseContracts": [
								264
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 249,
												"id": 252,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 264,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 264,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 265,
							"src": "608:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}